(ns zombie-apocalypse.core) 
(:require [clojure.string :as s])

(def filename "US_largest500_airportnetwork_shrunk.csv")

(def headers->keywords {"SourceIATA" :sourceid
                        "DestIATA" :destid "Airlines":routes})

(defn str->int
  [str]
  (Integer. str))

(def conversions {:sourceid str->int :destid str->int
                  :routes str->int})


(defn parse
  [string]
  (map #(s/split % #",")
       (s/split string #"\n")))

(defn numberised [s]
     (into [] (map read-string (reduce into  (parse s)))))

(defn routes [coll]
     (for [s (partition 2 coll)] (into [] s)))

(def edges (routes (numberised (slurp filename))))

(defn empty-graph [n]
 (vec (repeat n #{})))

(defn add-directed-edge [g [n1 n2]]
 (let [n1-neighbors (g n1)]
   (assoc g n1 (conj n1-neighbors n2))))
   
(defn add-edge [g [n1 n2]]
  (-> g (add-directed-edge n1 n2)
      (add-directed-edge n2 n1)))


(defn graph [n ] 
    (reduce add-directed-edge (empty-graph n)
       (into [] edges)))
       

